device:
  platform: desktop
  name: Example Device
  fullscreen: false

# dummy_integration:

screen:
  poll_interval: 10   ##Amount of seconds between polling various device features

inkBoard:
  name: "Element Example"
  date_format: "%A %d %B %Y" #"%A %d %B %Y"  #Date format datetime format string. Defaults to "%d-%m-%Y"
  time_format: "%H:%M" #Time format in datetime format string. Defaults to %H:%M
  integration_start_time: -1 #Time to wait for integrations to start, before moving on to running the dashboard. -1 means wait until they are all finished.

elements:
  ##For example's sake, these element's will be reused.
  ##But keep in mind, this may at times lead to unexpected consequences.
  - type: Icon
    icon: mdi:test-tube
    id: test-icon
  - type: Button
    id: example-button
    text: Hello World!
    fit_text: true
    radius: h*0.1
    background_color: inkBoard-light
  - type: Icon
    id: example-icon
    icon: mdi:shape
    background_shape: circle
    background_color: inkBoard-light


popups:
  - type: PopupMenu
    id: grid-popup
    title: "Popping up"
    menu_layout: grid-popup-layout

layouts:
  - type: custom:LabeledElements  ##If possible, maybe make the labels link to the documentation of said element
    id: small-elements
    outer_margins: 10
    inner_margins: 10
    rows: 4
    columns: 3
    elements:
      ##Buttons are similar to webpage buttons: some text and some other basic styling options
      - type: Button
        text: Hello World!
        fit_text: true
        radius: h*0.1
        background_color: inkBoard-light
      ##Icons are similar to buttons, but instead of text they use icons
      ##Any mdi icon is valid as an icon, however image files can also be used (these will be styled to correspond to mdi icons)
      - type: Icon
        icon: mdi:shape
        background_shape: circle
        background_color: inkBoard-light
      ##Picture elements are similar to the Icon element, but do not do any styling or recoloring. Nor do they accept mdi:icons as value.
      - type: Picture
        picture: 1024px-Kingda_Ka.jpg
        background_shape: rounded_rectangle

      ##The AnalogueClock is an analogue clock that shows the time
      - type: AnalogueClock
        clock_fill_color: inkBoard
        tick_color: white
        hour_hand_color: white
        minute_hand_color: white
        outline_color: inkBoard

      ##The DigitalClock is, well, a digital clock
      - type: DigitalClock
        background_color: inkboard
        font_color: white

      ##A DateElement is similar to the DigitalClock, but is mainly meant to show e.g. dates.
      ##The date_format string must be a valid datetime format string for Python.
      - type: DateElement
        date_format: "%a %d %B"
        background_color: inkboard
        font_color: white

      ##The LineSlider is a Slider element has a position indicator that moves along the line
      - type: LineSlider
        id: example-lineslider
        minimum: 0
        maximum: 10
        color: inkBoard
        thumb_color: inkBoard-light
        end_points: [mdi:numeric-0-circle, mdi:numeric-10-circle]
        background_color: white
      ##The BoxSlider indicates it position by filling the box accordingly
      - type: BoxSlider
        inactive_color: inkBoard
        outline_color: inkBoard
        thumb_color: inkBoard
        active_color: inkBoard-light
        end_points: [mdi:numeric-0-circle, mdi:numeric-1-circle]
        background_color: white
      ##A TimerSlider can be used to show time progression. Both LineSlider and BoxSlider styles can be used, by setting style to line and box respectively.
      ##The Label can be clicked to start the timer
      - type: TimerSlider
        count: up
        style: box
        minimum: 0
        maximum: 45
        id: example-timerslider
        inactive_color: inkBoard
        outline_color: inkBoard
        thumb_color: inkBoard
        active_color: inkBoard-light
        background_color: white
        label_tap_action:
          action: element:toggle-timer
          element_id: example-timerslider

      ##A CheckBox is an icon that can be checked and unchecked. It also has an on_set action, that can be used to call functions when the state changes.
      - type: CheckBox
        checked_icon: mdi:checkbox-marked
        unchecked_icon: mdi:checkbox-blank
        icon_color: inkboard
        state_attributes:
          true:
            icon_color: inkBoard
          false:
            icon_color: gray
      ##A DropDown opens a popup from which an option can be selected.
      - type: DropDown
        options:
          - "inkBoard"
          - "green"
          - "yellow"
        opened_icon: mdi:eyedropper-variant
      ##A Counter displays a count, and can be increased and decreased. Using on_count, functions can be called when the value changes.
      - type: Counter
        minimum: 0
        maximum: 10
        on_count:
          ##Making elements interact with each other is possible like this.
          ##the action identifier element: makes it look for an element with the corresponding element_id, and use the function (provided the element has said function)
          action: element:set-position
          element_id: example-lineslider

  ##Layout Elements group elements together.
  ##There are a couple of varieties implemented currently
  ##In regards to coloring: aside from the background and outline_colors, layouts also have a foreground and accent color property
  ##Any element implemented within can use this color for its color properties by setting the value to foreground, accent, background etc.
  ##The depth of implementation does not matter here, the colour will be parsed from the first layout that actually has it defined.
  - type: custom:LabeledElements
    id: layout-elements
    outer_margins: 10
    inner_margins: 10
    columns: 2
    rows: 2
    elements:

      ##The Layout element is the base of all other layouts
      ##However, it is not very yaml friendly, though possible to use as is.
      - type: Layout
        background_color: white
        outline_color: inkboard-light
        layout: [["?", [example-button, "w"]], ["?", [test-icon, "?"], [example-icon, "?"]]]
          

      ##GridLayouts arange elements in a grid. The number of rows and columns can be configured, and elements can be given rows and/or columns to be put in.
      - type: GridLayout
        background_color: white
        foreground_color: inkBoard
        columns: 2
        rows: 2
        elements:
          - type: Button
            text: This is a grid
            grid_column: 1
            grid_row: 1
            multiline: true
            font_size: h*0.4
            font_color: foreground
          - example-button
          - example-icon
          - test-icon

      ##TileLayout are possibly the most flexible layouts. Each element they get can be given a name, and via that name, the layout can be configured.
      ##tile_layouts are build in the following way:
        # A ';' indicates a vertical split, a ',' indicates a horizontal one
        # Using [] around elements, they can be put in the sublayouts, allowing for i.e. stacking two elements in the same row.
        # For sizing, attributes horizontal_sizes and vertical_sizes are available, which allows setting the sizes for elements, depending on availability (i.e. multiple elements in a row cannot as easily be given a vertical size.)
        # Both size attributes also allow for the keys 'inner' and 'outer', which respectively control the margins around the Layout itself, and inbetween the elements themselves.
      - type: TileLayout
        background_color: white
        tile_layout: "[button;icon],slider"
        horizontal_sizes:
          slider: w*0.25
        elements:
          button: example-button
          icon: example-icon
          slider:
            type: Slider
            style: box
            orientation: vertical
            outline_color: None
            active_color: inkBoard-light
            inactive_color: gray

      ##For navigation, TabPages are ideal. Various tabs can be registered, and they can be navigated through using either a navigation bar, or page handles.
      - type: TabPages
        accent_color: gray
        background_color: white
        hide_navigation_bar: true
        hide_page_handles: false
        apply_default_sizes: false
        tile_layout: left
        vertical_sizes:
          tab: h*0.75
        tabs:
          - name: Button
            icon: mdi:gesture-tap-button
            element: example-button
          - name: Icon
            icon: mdi:earth
            element:
              type: Icon
              icon: mdi:earth
              icon_color: accent
          - name: Icon 2.0
            icon: mdi:google-earth
            element: example-icon

  - type: custom:LabeledElements
    id: misc-elements
    outer_margins: 10
    inner_margins: 10
    columns: 2
    rows: 2
    elements:
      - type: Button
        text: Click me!
        label_text: Popup
        background_color: gray12
        tap_action:
          ##Popups can be opened from elements using an action like on of the following:
          action: show-popup
          data:
            popup_id: grid-popup
        hold_action:
          action: element:show-popup
          element_id: grid-popup

      ##Device Button: show feature classes (currently means battery, network and backlight) with textual info
      - type: DeviceButton
        monitor_feature: network
        monitor_attribute: IP
        background_color: white
        prefix: "IP: "
      
      ##Device Icon: shows feature info in an Icon element
      - type: DeviceIcon
        icon_feature: network

  - type: GridLayout
    id: grid-popup-layout
    elements:
      - type: Button
        text: I'm in a popup!

main_tabs:
  ##Add some defaults in the parser here for markup (i.e. margins etc.)
  foreground_color: inkboard-light
  background_color: [100, 100, 100, 150]
  element_properties:
    navigation:
      inactive_properties:
        background_color: None
        radius: 5
        element_properties:
          name: 
            font_color: black
          icon:
            icon_color: black
      active_properties:
        background_color: [255, 255, 255, 200]
        element_properties:
          name: 
            font_color: active
          icon:
            icon_color: white
  tabs:
    - element: small-elements
      name: Elements
      icon: mdi:shape
    - element: layout-elements
      name: Layouts
      icon: mdi:view-dashboard
    - element: misc-elements
      name: Misc
      icon: mdi:atom

statusbar:
  ##The statusbar config entry has two additional entries to those of the StatusBar Element: size and location
  ##Size: a PSSMdimension for the width/height of the statusbar
  ##location: top,left,bottom,right. Self explanatory
  orientation: horizontal
  location: top
  size: h*0.05
  background_color: inkBoard
  foreground_color: white
  status_element_properties:
    background_color: None
    background_shape: None
    icon_color: foreground
    show_feedback: true
  element_properties:
    clock:
      font_color: foreground
